apply plugin: 'com.android.application'
apply plugin: "io.github.jmatsu.license-list"
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'spoon'
apply plugin: 'de.mannodermaus.android-junit5'
apply from: rootProject.file("gradle/android-common.gradle")
apply from: rootProject.file("gradle/android-unit-test.gradle")
apply from: rootProject.file("gradle/jacoco-for-develop-debug.gradle")

ext {
    dexmakerVersion = '1.2'
}

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    buildFeatures {
        dataBinding true
        viewBinding true
    }
    signingConfigs {
        debug {
            storeFile rootProject.file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src-gen/main/java']
        }
        androidTest {
            java.srcDirs = ['src/androidTest/java']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }

    defaultConfig {
        applicationId "jp.pxv.android"
        targetSdkVersion versions.targetSdk
        minSdkVersion versions.minSdk

        multiDexEnabled true

        versionCode versions.versionCode
        versionName versions.versionName

        buildConfigField "boolean", "VERIFY_PREMIUM", "false"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        renderscriptTargetApi 20
        renderscriptSupportModeEnabled true
    }

    flavorDimensions "environment"
    productFlavors {
        develop {
            dimension "environment"
            buildConfigField "String", "ACCOUNT_TYPE", "\"net.pixiv.develop\""
            applicationIdSuffix '.develop'
            resConfigs "ja", "xxhdpi"
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        pdgDraft {
            dimension "environment"
            buildConfigField "String", "ACCOUNT_TYPE", "\"net.pixiv.pgdDraft\""
            applicationIdSuffix '.pdgDraft'
            resConfigs "ja", "xxhdpi"
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        production {
            dimension "environment"
            buildConfigField "String", "ACCOUNT_TYPE", "\"net.pixiv\""
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }

        release {
            signingConfig null
            debuggable false
            minifyEnabled true
            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
            proguardFile file('proguard-project.txt')

            productFlavors.develop.signingConfig signingConfigs.debug
            productFlavors.pdgDraft.signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        pickFirst 'META-INF/DEPENDENCIES'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'LICENSE.txt'
    }

    androidExtensions {
        features = ["parcelize"]
    }
}

repositories {
    maven {
        url 'https://maven.fabric.io/public'
    }
    maven {
        url "https://clojars.org/repo/"
    }
    maven {
        url "https://jitpack.io"
    }
    mavenCentral()
    google()
    jcenter()
    maven { url "https://s3.amazonaws.com/moat-sdk-builds" }
}

dependencies {

    testCompile libraries.asm

}


apply from: rootProject.file("gradle/licenselist.gradle")

spoon {
    // To grant permissions to Android M >= devices */
    grantAllPermissions = true
}

apply plugin: 'com.google.gms.google-services'
